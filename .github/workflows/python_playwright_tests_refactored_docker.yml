
name: Python based Playwright tests with docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  setup-docker:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: docker-practice/actions-setup-docker@master
    - name: set up Docker
      run: |
        set -x
        docker version
    - name: build image
      run: |
        docker build . -f Dockerfile.initial -t dockerplaywright-from-scratch
     
    - name: run container & get shell on the container
      run: |
        docker run --rm --entrypoint bash dockerplaywright-from-scratch
    - name: run tests
      run: |
        python -m pytest -s tests/  --browser webkit
    - name: exit shell
      run: | 
        exit
  # create-virtualenv-and-run-tests:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: "3.10"
  #   - name: create virtual env 
  #     run: |
  #       pip install virtualenv
  #       python -m venv env
  #       source env/bin/activate
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #       pip install playwright
  #       pip install pytest
  #       pip install pytest-playwright
  #       playwright install
  #   - name : run tests
  #     run: |
  #       python -m pytest -s tests/ 

  
  # Build and push the Docker image
  # push_to_registry:
  #   name: Build and push Docker image to Docker Hub
  #   # ...but only when a `release` is `published` (combined with `on`)
  #   #if: github.event_name == 'release'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2
      
  #     - name: Build and push image to the Docker Hub
  #       uses: docker/build-push-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_PASSWORD }}
  #         repository: ${{ secrets.DOCKERHUB_REPOSITORY }}
  #         tag_with_ref: true
  #         tag_with_sha: true
  #         tags: latest  


